{"version":3,"sources":["components-AIAL/Search.jsx","components-AIAL/List.jsx","components-AIAL/SearchableList.jsx","components-SIAL/Search.jsx","components-SIAL/List.jsx","components-SIAL/SearchableList.jsx","index.js"],"names":["Button","styled","button","Input","input","Row","div","Wrapper","span","Search","query","handleQuery","className","label","type","value","onChange","onClick","target","li","Container","ul","Label","ResetButton","ArchivedLabel","List","list","React","useState","archivedItems","setArchivedItems","Fragment","filter","item","includes","id","byArchived","map","key","name","length","Footer","footer","SearchableList","setQuery","filteredList","toLowerCase","byQuery","event","href","rel","chance","Chance","AwesomeIcon","FontAwesomeIcon","Header","h3","refreshData","count","unique","integer","min","max","faker","company","companyName","defaultList","App","archive","setArchive","setList","ArchiveInAList","SearchInAList","color","icon","faToggleOn","rotation","undefined","size","title","faSyncAlt","data","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.58cf4ff1.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  font-weight: bold;\n  color: #ffffff;\n  background-color: #ff4136;\n  border-radius: 4px;\n  padding: 10px;\n  margin-left: auto;\n`;\n\nconst Input = styled.input`\n  margin-left: 5px;\n  width: 50%;\n  padding: 5px;\n`;\n\nconst Row = styled.div`\n  color: #001f3f;\n  font-weight: bold;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Wrapper = styled.span`\n  margin-left: 20px;\n`\n\nconst Search = ({ query, handleQuery, className, label }) => (\n  <Row className={className}>\n    <Wrapper>{label}</Wrapper>\n    <Input type=\"text\" value={query} onChange={handleQuery} />\n    <Button\n      onClick={() => {\n        // pass an object to satisfy event.target.value\n        handleQuery({ target: { value: \"\" } });\n      }}\n    >\n      Clear\n    </Button>\n  </Row>\n);\n\nexport { Search };\nexport default Search;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// NOTE:  simplify the layout by using a styled.li for the Row\nconst Row = styled.li`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst Container = styled.ul`\n  padding-inline-start: 20px;\n`\n\nconst Label = styled.span`\n  color: #001f3f;\n`;\n\nconst Button = styled.button`\n  font-weight: bold;\n  color: #ffffff;\n  background-color: #0074d9;\n  border-radius: 4px;\n  padding: 4px;\n  padding-right: 10px;\n  padding-left: 10px;\n`;\n\nconst ResetButton = styled(Button)`\n  background-color: #ff851b;\n  margin-left: 10px;\n  margin-right: 8px;\n`;\n\nconst ArchivedLabel = styled(Label)`\n  margin-left: 24px;\n  font-size: 12px;\n`;\n\nconst byArchived = archivedItems => item => !archivedItems.includes(item.id);\n\nconst List = ({ className, list }) => {\n  const [archivedItems, setArchivedItems] = React.useState([]);\n\n  const handleArchive = id => {\n    setArchivedItems(archivedItems => [...archivedItems, id]);\n  };\n\n  return (\n    <React.Fragment>\n      <Container className={className}>\n        {list.filter(byArchived(archivedItems)).map(item => (\n          <Row key={item.id}>\n            <Label>{item.name}</Label>\n            <Button type=\"button\" onClick={() => handleArchive(item.id)}>\n              Archive\n            </Button>\n          </Row>\n        ))}\n      </Container>\n      <ArchivedLabel>\n        {archivedItems.length} item{archivedItems.length === 1 ? \"\" : \"s\"}{\" \"}\n        archived...\n      </ArchivedLabel>\n      {archivedItems.length > 0 && (\n        <ResetButton onClick={() => setArchivedItems([])}>\n          Reset Archived\n        </ResetButton>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport { List };\nexport default List;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { List, Search } from \"./\";\n\nconst Footer = styled.footer`\n  margin-top: 20px;\n  color: #001f3f;\n  font-size: 10px;\n  font-style: italic;\n`;\n\nconst byQuery = query => item =>\n  !query || item.name.toLowerCase().includes(query.toLowerCase());\n\nconst SearchableList = ({ className, list }) => {\n  const [query, setQuery] = React.useState(\"\");\n\n  const handleQuery = event => {\n    setQuery(event.target.value);\n  };\n\n  const filteredList = list.filter(byQuery(query));\n\n  return (\n    <div className={className}>\n      <Search query={query} handleQuery={handleQuery} label=\"Search:\" />\n      <hr />\n      <List list={filteredList} />\n      <Footer>\n        Archive in a List example - see{\" \"}\n        <a \n          href=\"https://www.robinwieruch.de/react-lift-state/\" \n          target=\"_blank\" \n          rel=\"noopener noreferrer\"\n        >\n          React Lift State\n        </a>{\" \"}\n        for more detail...\n      </Footer>\n    </div>\n  );\n};\n\nexport { SearchableList };\nexport default SearchableList;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Button = styled.button`\n  font-weight: bold;\n  color: #ffffff;\n  background-color: #ff4136;\n  border-radius: 4px;\n  padding: 10px;\n  margin-left: auto;\n`;\n\nconst Input = styled.input`\n  margin-left: 5px;\n  width: 50%;\n  padding: 5px;\n`;\n\nconst Wrapper = styled.span`\n  margin-left: 20px;\n`\n\nconst Row = styled.div`\n  color: #001f3f;\n  font-weight: bold;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Search = ({ className, query, handleQuery, label }) => (\n  <Row className={className}>\n    <Wrapper>{label}</Wrapper>\n    <Input type=\"text\" value={query} onChange={handleQuery} />\n    <Button\n      onClick={() => {\n        // pass an object to satisfy event.target.value\n        handleQuery({ target: { value: \"\" } });\n      }}\n    >\n      Clear\n    </Button>\n  </Row>\n);\n\nexport { Search };\nexport default Search;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\n// NOTE:  styled to match the other implementation...\nconst Row = styled.li`\n  color: #001f3f;\n  display: flex;\n  flex-direction: row;\n  height: 23px;\n`;\n\nconst Container = styled.ul`\n  padding-inline-start: 20px;\n`\n\nconst List = ({ className, list }) => (\n  <Container className={className}>\n    {list.map(item => (\n      <Row key={item.id}>\n        {item.name}\n      </Row>\n    ))}\n  </Container>\n);\n\nexport { List };\nexport default List;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { List, Search } from \"./\";\n\nconst Footer = styled.footer`\n  margin-top: 20px;\n  color: #001f3f;\n  font-size: 10px;\n  font-style: italic;\n`;\n\nconst byQuery = query => item =>\n  !query || item.name.toLowerCase().includes(query.toLowerCase());\n\nconst SearchableList = ({ className, list }) => {\n  const [query, setQuery] = React.useState(\"\");\n\n  const handleQuery = event => {\n    setQuery(event.target.value);\n  };\n\n  const filteredList = list.filter(byQuery(query));\n\n  return (\n    <div className={className}>\n      <Search query={query} handleQuery={handleQuery} label=\"Search:\" />\n      <hr />\n      <List list={filteredList} />\n      <Footer>\n        Search in a List example - see{\" \"}\n        <a \n          href=\"https://www.robinwieruch.de/react-lift-state/\" \n          target=\"_blank\" \n          rel=\"noopener noreferrer\"\n        >\n          React Lift State\n        </a>{\" \"}\n        for more detail...\n      </Footer>\n    </div>\n  );\n};\n\nexport { SearchableList };\nexport default SearchableList;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Chance from \"chance\";\nimport faker from \"faker\";\nimport styled from \"styled-components\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faToggleOn, faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./styles.css\";\nimport { SearchableList as ArchiveInAList } from \"./components-AIAL\";\nimport { SearchableList as SearchInAList } from \"./components-SIAL\";\n\nconst MIN_ID = 0\nconst MAX_ID = 400\n\nconst MIN_COUNT = 15\nconst MAX_COUNT = 40\n\nconst chance = Chance();\n\nconst AwesomeIcon = styled(FontAwesomeIcon)`\n  margin-left: 10px;\n`;\n\nconst Header = styled.h3`\n  color: #001f3f;\n`\n\nconst Label = styled.span`\n  margin-left: 10px;\n  font-size: 12px;\n  font-weight: regular;\n  font-style: italic;\n  color: #aaaaaa;\n`\n\nconst refreshData = (count) => {\n  const ids = chance.unique(chance.integer, count, { min: MIN_ID, max: MAX_ID });\n  const data = ids.map(id => {\n    return { id: id, name: faker.company.companyName() };\n  });\n  return data;\n};\n\nconst defaultList = refreshData(MIN_COUNT)\n\n// NOTE:  add toggle to be able to switch between the 2 styles\nfunction App() {\n  const [archive, setArchive] = React.useState(false);\n  const [list, setList] = React.useState(defaultList);\n  const handleToggle = () => {\n    setArchive(!archive);\n  };\n  const handleRefresh = () => {\n    const count = chance.integer({ min: MIN_COUNT, max: MAX_COUNT })\n    const data = refreshData(count);\n    setList(data);\n  };\n  let SearchableList = archive ? ArchiveInAList : SearchInAList;\n  return (\n    <div className=\"App\">\n      <Header>\n        React Lift State{\" \"}\n        <AwesomeIcon\n          color={archive ? \"#2ECC40\" : \"#001f3f\"}\n          icon={faToggleOn}\n          rotation={archive ? undefined : 180}\n          size=\"lg\"\n          onClick={handleToggle}\n          title=\"Toggle Implementation\"\n        />\n        <AwesomeIcon \n          icon={faSyncAlt} \n          onClick={handleRefresh} \n          title=\"Refresh Data\"\n        />\n        <Label>{list.length} items</Label>\n      </Header>\n      <SearchableList list={list} />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}